name: CI/CD Pipeline
on:
  push:
    branches:
      - master

permissions:
  contents: read
  id-token: write

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    environment: production

    steps:
      # Check out mã nguồn
      - name: Check out code
        uses: actions/checkout@v4

      # Cài đặt Java
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      # Cache Maven dependencies
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      # Build và test với Maven
      - name: Build and test with Maven
        run: mvn clean install -DskipTests=false

      # Đăng nhập vào Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: registry.hub.docker.com
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Build và push Docker images với Jib
      - name: Build and push Docker images with Jib
        run: mvn clean compile jib:build -Djib.to.auth.username=${{ secrets.DOCKERHUB_USERNAME }} -Djib.to.auth.password=${{ secrets.DOCKERHUB_TOKEN }}

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    environment: production

    steps:
      # Check out mã nguồn
      - name: Check out code
        uses: actions/checkout@v4

      # Cài đặt SSH key để truy cập VPS
      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          name: id_vps
          known_hosts: ${{ secrets.SSH_KNOWN_HOSTS }}

      # Deploy lên VPS
      - name: Deploy to VPS
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} << 'EOF'
            # Đường dẫn tới thư mục dự án trên VPS
            cd ~/web-builder
            # Cập nhật mã nguồn từ GitHub
            git pull
            # Cập nhật Docker Compose
            docker compose up -d
            # Dọn dẹp images cũ
            docker image prune -f
          EOF